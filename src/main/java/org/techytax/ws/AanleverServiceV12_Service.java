package org.techytax.ws;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;

/**
 * This class was generated by Apache CXF 2.7.1
 * 2012-12-27T22:36:16.522+01:00
 * Generated source version: 2.7.1
 * 
 */
@WebServiceClient(name = "AanleverService_V1_2", 
                  wsdlLocation = "aanlever_test.wsdl",
                  targetNamespace = "http://logius.nl/digipoort/wus/2.0/aanleverservice/1.2/") 
public class AanleverServiceV12_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://logius.nl/digipoort/wus/2.0/aanleverservice/1.2/", "AanleverService_V1_2");
    public final static QName AanleverServiceV12 = new QName("http://logius.nl/digipoort/wus/2.0/aanleverservice/1.2/", "AanleverService_V1_2");
    static {
        URL url = AanleverServiceV12_Service.class.getResource("aanlever_test.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(AanleverServiceV12_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "aanlever_test.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public AanleverServiceV12_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AanleverServiceV12_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AanleverServiceV12_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    /**
     *
     * @return
     *     returns AanleverServiceV12
     */
    @WebEndpoint(name = "AanleverService_V1_2")
    public org.techytax.ws.AanleverServiceV12 getAanleverServiceV12() {
        return super.getPort(AanleverServiceV12, org.techytax.ws.AanleverServiceV12.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AanleverServiceV12
     */
    @WebEndpoint(name = "AanleverService_V1_2")
    public org.techytax.ws.AanleverServiceV12 getAanleverServiceV12(WebServiceFeature... features) {
        return super.getPort(AanleverServiceV12, org.techytax.ws.AanleverServiceV12.class, features);
    }

}
