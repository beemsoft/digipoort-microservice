package org.techytax.status;

import org.techytax.ws.AanleverServiceV12_Service;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;

/**
 * This class was generated by Apache CXF 2.7.1
 * 2013-01-16T21:54:45.287+01:00
 * Generated source version: 2.7.1
 * 
 */
@WebServiceClient(name = "StatusinformatieService_V1_2", 
                  wsdlLocation = "status_test.wsdl",
                  targetNamespace = "http://logius.nl/digipoort/wus/2.0/statusinformatieservice/1.2/") 
public class StatusinformatieServiceV12_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://logius.nl/digipoort/wus/2.0/statusinformatieservice/1.2/", "StatusinformatieService_V1_2");
    public final static QName StatusinformatieServiceV12 = new QName("http://logius.nl/digipoort/wus/2.0/statusinformatieservice/1.2/", "StatusinformatieService_V1_2");
    static {
        URL url = null;
        try {
            url = AanleverServiceV12_Service.class.getResource("status_test.wsdl");
        } catch (Exception e) {
            java.util.logging.Logger.getLogger(StatusinformatieServiceV12_Service.class.getName())
                .log(java.util.logging.Level.SEVERE, 
                     "Can not initialize the default wsdl from {0}", "status_test.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public StatusinformatieServiceV12_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public StatusinformatieServiceV12_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StatusinformatieServiceV12_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    /**
     *
     * @return
     *     returns StatusinformatieServiceV12
     */
    @WebEndpoint(name = "StatusinformatieService_V1_2")
    public StatusinformatieServiceV12 getStatusinformatieServiceV12() {
        return super.getPort(StatusinformatieServiceV12, StatusinformatieServiceV12.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StatusinformatieServiceV12
     */
    @WebEndpoint(name = "StatusinformatieService_V1_2")
    public StatusinformatieServiceV12 getStatusinformatieServiceV12(WebServiceFeature... features) {
        return super.getPort(StatusinformatieServiceV12, StatusinformatieServiceV12.class, features);
    }

}
